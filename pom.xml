<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.test</groupId>
	<artifactId>hub-poc</artifactId>
	<version>3.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<modules>
		<module>sample-service</module>
		<module>sample-th</module>
		<module>thirdparty-modules</module>
	</modules>

	<properties>

		<!-- Core java settings -->
		<java.encoding>UTF-8</java.encoding>
		<java.source.version>1.8</java.source.version>
		<java.target.version>1.8</java.target.version>
		<javax-jms.version>1.1</javax-jms.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<servlet-api.version>3.0.1</servlet-api.version>

		<!-- framework properties -->
		<activemq.version>5.11.1</activemq.version>
		<apache-log4j-extras.version>1.1</apache-log4j-extras.version>
		<camel.version>2.15.1.redhat-620133</camel.version>
		<commons-codec.version>1.10</commons-codec.version>
		<commons-collections.version>3.2.1</commons-collections.version>
		<commons-collections4.version>4.0</commons-collections4.version>
		<commons-configuration.verison>1.10</commons-configuration.verison>
		<commons-exec.version>1.3</commons-exec.version>
		<commons-io.version>2.1.0.redhat-4</commons-io.version>
		<commons-beanutils.version>1.8.3</commons-beanutils.version>
		<commons-lang.version>2.6.0.redhat-6</commons-lang.version>
		<commons-lang3.version>3.3.2</commons-lang3.version>
		<commons-logging.version>1.1.3</commons-logging.version>
		<commons-math3.version>3.3</commons-math3.version>
		<commons-pool2.version>2.3</commons-pool2.version>
		<cxf.version>3.0.4.redhat-620133</cxf.version>
		<ehcache.version>2.10.2</ehcache.version>
		<hawtio.version>1.4.50</hawtio.version>
		<hsqldb.version>1.8.0.10</hsqldb.version>
		<httpclient.version>4.5.2</httpclient.version>
		<httpasyncclient.version>4.1.1</httpasyncclient.version>
		<httpcore.version>4.4.4</httpcore.version>
		<httpcore-nio.version>4.4.4</httpcore-nio.version>
		<httpmime.version>4.2.2</httpmime.version>
		<hornetq.version>2.3.25.SP6-redhat-1</hornetq.version>
		<joda-time.version>2.7</joda-time.version>
		<json-lib.classifier>jdk15</json-lib.classifier>
		<json-lib.version>2.4</json-lib.version>
		<ezmorph.version>1.0.6</ezmorph.version>
		<log4j.version>1.2.17</log4j.version>
		<log4j-core.version>2.3</log4j-core.version>
		<marklogic-xcc.version>8.0.3</marklogic-xcc.version>
		<poi.version>3.10.1</poi.version>
		<quartz.version>1.8.6</quartz.version>
		<saxon-he.version>9.5.1-5</saxon-he.version>
		<slf4j-api.version>1.6.6</slf4j-api.version>
		<slf4j-log4j12.version>1.7.10</slf4j-log4j12.version>
		<spring.version>4.1.6.RELEASE</spring.version>
		<spring-integration-xml.version>4.1.4.RELEASE</spring-integration-xml.version>
		<stax2-api.version>3.1.4</stax2-api.version>
		<woodstox-core-asl.version>4.4.1</woodstox-core-asl.version>
		<xalan.version>2.7.2</xalan.version>
		<xbean.version>3.18</xbean.version>
		<xom.version>1.2.5</xom.version>
		<xercesImpl.version>2.11.0</xercesImpl.version>
		<xml-apis.version>1.4.01</xml-apis.version>
		<xmlbeans.version>2.6.0</xmlbeans.version>
		<xstream.version>1.4.8</xstream.version>
		<xmlpull.version>1.1.3.1</xmlpull.version>
		<xom.version>1.2.7.redhat-4</xom.version>
		<freemarker.version>2.3.25-incubating</freemarker.version>
		<mvel2.version>2.2.4.Final-redhat-1</mvel2.version>
		<kie.camel.version>6.2.0.Final-redhat-4</kie.camel.version>

		<!-- unit test frameworks properties -->
		<junit.version>4.12</junit.version>
		<easymock.version>3.4</easymock.version>
		<openpojo.version>0.8.3</openpojo.version>
		<powermock-api-easymock.version>1.6.4</powermock-api-easymock.version>
		<powermock-classloading-xstream.version>1.6.4</powermock-classloading-xstream.version>
		<powermock-module-junit4.version>1.6.4</powermock-module-junit4.version>
		<powermock-module-junit4-rule.version>1.6.4</powermock-module-junit4-rule.version>
		<powermock-module-junit4-rule-agent.version>1.6.4</powermock-module-junit4-rule-agent.version>
		<xmlunit.version>1.6</xmlunit.version>

		<!-- maven plugin properites -->
		<bundle-plugin.version>2.3.7</bundle-plugin.version>
		<build-helper-maven-plugin.version>1.9.1</build-helper-maven-plugin.version>
		<cobertura-maven-plugin.version>2.7</cobertura-maven-plugin.version>
		<jaxb2-basics.version>0.8.4</jaxb2-basics.version>
		<jaxb2-basics-runtime.version>0.8.4</jaxb2-basics-runtime.version>
		<jboss-as-maven-plugin.version>7.7.Final</jboss-as-maven-plugin.version>
		<jetty-plugin.version>8.1.16.v20140903</jetty-plugin.version>
		<maven-antrun-plugin.version>1.8</maven-antrun-plugin.version>
		<maven-assembly-plugin.version>2.5.4</maven-assembly-plugin.version>
		<maven-clean-plugin.version>2.6.1</maven-clean-plugin.version>
		<maven-compiler-plugin.version>3.3</maven-compiler-plugin.version>
		<maven-ear-plugin.version>2.10</maven-ear-plugin.version>
		<maven-dependency-plugin.version>2.10</maven-dependency-plugin.version>
		<maven-jar-plugin.version>2.6</maven-jar-plugin.version>
		<maven-javadoc-plugin.version>2.10.3</maven-javadoc-plugin.version>
		<maven-jaxb2-plugin.version>0.12.3</maven-jaxb2-plugin.version>
		<maven-pmd-plugin.version>3.4</maven-pmd-plugin.version>
		<maven-release-plugin.version>2.5.2</maven-release-plugin.version>
		<maven-resources-plugin.version>2.7</maven-resources-plugin.version>
		<maven-source-plugin.version>2.4</maven-source-plugin.version>
		<maven-surefire-plugin.version>2.18.1</maven-surefire-plugin.version>
		<maven-surefire-report-plugin.version>2.18.1</maven-surefire-report-plugin.version>
		<maven-war-plugin.version>2.6</maven-war-plugin.version>
		<!-- eclipse m2e specific plugin version, only used by eclipse m2e -->
		<m2e-lifecycle-mapping.version>1.0.0</m2e-lifecycle-mapping.version>
		<oracle.jdbc.version>10.ORACLE</oracle.jdbc.version>
		<jboss.eap.version>6.4.5.GA</jboss.eap.version>
		<aopalliance.version>1.0</aopalliance.version>
		<asm.version>3.3.1</asm.version>
		<javax.annotation-api.version>1.2</javax.annotation-api.version>
		<javax.ws.rs-api.version>2.0.1</javax.ws.rs-api.version>
		<jaxb.version>2.2.11</jaxb.version>
		<neethi.version>3.0.3</neethi.version>
		<oauth.version>20100527</oauth.version>
		<wsdl4j.version>1.6.3</wsdl4j.version>
		<xml-resolver.version>1.2</xml-resolver.version>
		<xmlschema-core.version>2.2.1</xmlschema-core.version>
		<therore-concurrent.version>1.1.0</therore-concurrent.version>

		<!-- Code Coverage -->
		<!-- <argLine>-XX:-UseSplitVerifier -XX:MaxPermSize=256m</argLine> -->
		<!-- <sonar.jacoco.itReportPath>${project.basedir}/../target/jacoco-it.exec</sonar.jacoco.itReportPath> 
			<sonar.language>java</sonar.language> -->
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.jboss.bom</groupId>
				<artifactId>eap6-supported-artifacts</artifactId>
				<version>${jboss.eap.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- external dependencies -->
			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>${commons-codec.version}</version>
			</dependency>
			<!-- <dependency> <groupId>commons-collections</groupId> <artifactId>commons-collections</artifactId> 
				<version>${commons-collections.version}</version> </dependency> -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-collections4</artifactId>
				<version>${commons-collections4.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-exec</artifactId>
				<version>${commons-exec.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>${commons-lang.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${commons-lang3.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
				<version>${commons-logging.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-math3</artifactId>
				<version>${commons-math3.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>${commons-beanutils.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-pool2</artifactId>
				<version>${commons-pool2.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hornetq</groupId>
				<artifactId>hornetq-core-client</artifactId>
				<version>${hornetq.version}</version>
			</dependency>
			<!-- <dependency> <groupId>org.apache.logging.log4j</groupId> <artifactId>log4j-core</artifactId> 
				<version>${log4j-core.version}</version> </dependency> -->

			<!-- <dependency> <groupId>log4j</groupId> <artifactId>log4j</artifactId> 
				<version>${log4j.version}</version> <exclusions> <exclusion> <groupId>javax.jms</groupId> 
				<artifactId>jms</artifactId> </exclusion> <exclusion> <groupId>com.sun.jdmk</groupId> 
				<artifactId>jmxtools</artifactId> </exclusion> <exclusion> <groupId>com.sun.jmx</groupId> 
				<artifactId>jmxri</artifactId> </exclusion> </exclusions> </dependency> -->
			<dependency>
				<groupId>org.jvnet.jaxb2_commons</groupId>
				<artifactId>jaxb2-basics-runtime</artifactId>
				<version>${jaxb2-basics-runtime.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jvnet.jaxb2_commons</groupId>
				<artifactId>jaxb2-basics</artifactId>
				<version>${jaxb2-basics.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jvnet.jaxb2_commons</groupId>
				<artifactId>jaxb2-basics-tools</artifactId>
				<version>${jaxb2-basics.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>commons-lang</artifactId>
						<groupId>commons-lang</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aop</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jms</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context-support</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-messaging</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-expression</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>net.sf.ehcache</groupId>
				<artifactId>ehcache</artifactId>
				<version>${ehcache.version}</version>
			</dependency>
			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>${joda-time.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j-api.version}</version>
			</dependency>
			<dependency>
				<groupId>com.thoughtworks.xstream</groupId>
				<artifactId>xstream</artifactId>
				<version>${xstream.version}</version>
			</dependency>
			<dependency>
				<groupId>xalan</groupId>
				<artifactId>xalan</artifactId>
				<version>${xalan.version}</version>
			</dependency>
			<dependency>
				<groupId>xerces</groupId>
				<artifactId>xercesImpl</artifactId>
				<version>${xercesImpl.version}</version>
			</dependency>
			<dependency>
				<groupId>xml-apis</groupId>
				<artifactId>xml-apis</artifactId>
				<version>${xml-apis.version}</version>
			</dependency>
			<dependency>
				<groupId>com.marklogic</groupId>
				<artifactId>marklogic-xcc</artifactId>
				<version>${marklogic-xcc.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>${httpclient.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpasyncclient</artifactId>
				<version>${httpasyncclient.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpcore</artifactId>
				<version>${httpcore.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpcore-nio</artifactId>
				<version>${httpcore-nio.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpmime</artifactId>
				<version>${httpmime.version}</version>
			</dependency>
			<dependency>
				<groupId>net.therore</groupId>
				<artifactId>therore-concurrent</artifactId>
				<version>${therore-concurrent.version}</version>
			</dependency>
			<dependency>
				<groupId>net.sf.saxon</groupId>
				<artifactId>Saxon-HE</artifactId>
				<version>${saxon-he.version}</version>
			</dependency>
			<dependency>
				<groupId>org.perf4j</groupId>
				<artifactId>perf4j</artifactId>
				<classifier>log4jonly</classifier>
				<version>${perf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.woodstox</groupId>
				<artifactId>stax2-api</artifactId>
				<version>${stax2-api.version}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.woodstox</groupId>
				<artifactId>woodstox-core-asl</artifactId>
				<version>${woodstox-core-asl.version}</version>
			</dependency>
			<dependency>
				<groupId>com.sun.msv.datatype.xsd</groupId>
				<artifactId>xsdlib</artifactId>
				<version>20060615</version>
			</dependency>
			<dependency>
				<groupId>net.java.dev.msv</groupId>
				<artifactId>msv-core</artifactId>
				<version>2013.6.1</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-core</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-spring</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-stream</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-jms</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-cxf</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-jackson</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-quartz2</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-mvel</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-freemarker</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-saxon</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-cxf-transport</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-http4</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-xmljson</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>net.sf.json-lib</groupId>
				<artifactId>json-lib</artifactId>
				<version>${json-lib.version}</version>
				<classifier>${json-lib.classifier}</classifier>
			</dependency>
			<dependency>
				<groupId>net.sf.ezmorph</groupId>
				<artifactId>ezmorph</artifactId>
				<version>${ezmorph.version}</version>
			</dependency>
			<!-- <dependency> <groupId>org.apache.camel</groupId> <artifactId>camel-jetty9</artifactId> 
				<version>${camel.version}</version> </dependency> -->
			<dependency>
				<groupId>org.kie</groupId>
				<artifactId>kie-spring</artifactId>
				<version>${kie.camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.kie</groupId>
				<artifactId>kie-camel</artifactId>
				<version>${kie.camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.freemarker</groupId>
				<artifactId>freemarker</artifactId>
				<version>${freemarker.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-zipfile</artifactId>
				<version>${camel.version}</version>
				<!-- use the same version as your Camel core version -->
			</dependency>
			<dependency>
				<groupId>org.mvel</groupId>
				<artifactId>mvel2</artifactId>
				<version>${mvel2.version}</version>
			</dependency>
			<dependency>
				<groupId>aopalliance</groupId>
				<artifactId>aopalliance</artifactId>
				<version>${aopalliance.version}</version>
			</dependency>
			<dependency>
				<groupId>asm</groupId>
				<artifactId>asm</artifactId>
				<version>${asm.version}</version>
			</dependency>
			<!-- CXF -->
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-core</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-bindings-soap</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-bindings-xml</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-databinding-jaxb</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-features-clustering</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-frontend-jaxrs</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-frontend-jaxws</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-frontend-simple</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-rs-client</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-rs-security-oauth</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-transports-http</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-transports-http-hc</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-ws-addr</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-wsdl</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-ws-policy</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.annotation</groupId>
				<artifactId>javax.annotation-api</artifactId>
				<version>${javax.annotation-api.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.ws.rs</groupId>
				<artifactId>javax.ws.rs-api</artifactId>
				<version>${javax.ws.rs-api.version}</version>
			</dependency>
			<dependency>
				<groupId>com.sun.xml.bind</groupId>
				<artifactId>jaxb-core</artifactId>
				<version>${jaxb.version}</version>
			</dependency>
			<dependency>
				<groupId>com.sun.xml.bind</groupId>
				<artifactId>jaxb-impl</artifactId>
				<version>${jaxb.version}</version>
			</dependency>
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>${log4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.neethi</groupId>
				<artifactId>neethi</artifactId>
				<version>${neethi.version}</version>
			</dependency>
			<dependency>
				<groupId>net.oauth.core</groupId>
				<artifactId>oauth</artifactId>
				<version>${oauth.version}</version>
			</dependency>
			<dependency>
				<groupId>net.oauth.core</groupId>
				<artifactId>oauth-provider</artifactId>
				<version>${oauth.version}</version>
			</dependency>
			<dependency>
				<groupId>wsdl4j</groupId>
				<artifactId>wsdl4j</artifactId>
				<version>${wsdl4j.version}</version>
			</dependency>
			<dependency>
				<groupId>xml-resolver</groupId>
				<artifactId>xml-resolver</artifactId>
				<version>${xml-resolver.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.ws.xmlschema</groupId>
				<artifactId>xmlschema-core</artifactId>
				<version>${xmlschema-core.version}</version>
			</dependency>
			<dependency>
				<groupId>org.quartz-scheduler</groupId>
				<artifactId>quartz</artifactId>
				<version>${quartz.version}</version>
			</dependency>

			<!-- test dependencies -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
			</dependency>
			<dependency>
				<groupId>xmlunit</groupId>
				<artifactId>xmlunit</artifactId>
				<version>${xmlunit.version}</version>
			</dependency>
			<dependency>
				<groupId>org.easymock</groupId>
				<artifactId>easymock</artifactId>
				<version>${easymock.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-simple</artifactId>
				<version>${slf4j-api.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${slf4j-log4j12.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-module-junit4</artifactId>
				<version>${powermock-module-junit4.version}</version>
			</dependency>
			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-api-easymock</artifactId>
				<version>${powermock-api-easymock.version}</version>
			</dependency>
			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-module-junit4-rule</artifactId>
				<version>${powermock-module-junit4-rule.version}</version>
			</dependency>
			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-classloading-xstream</artifactId>
				<version>${powermock-classloading-xstream.version}</version>
			</dependency>
			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-module-junit4-rule-agent</artifactId>
				<version>${powermock-module-junit4-rule-agent.version}</version>
			</dependency>
			<dependency>
				<groupId>com.openpojo</groupId>
				<artifactId>openpojo</artifactId>
				<version>${openpojo.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-test</artifactId>
				<version>${camel.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-test-spring</artifactId>
				<version>${camel.version}</version>
				<scope>test</scope>
			</dependency>
			<!-- internal projects -->
			<dependency>
				<groupId>org.test</groupId>
				<artifactId>sample-service</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.test</groupId>
				<artifactId>sample-th</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.test</groupId>
				<artifactId>thirdparty-modules</artifactId>
				<version>${project.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- test dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- <dependency> <groupId>org.apache.logging.log4j</groupId> <artifactId>log4j-core</artifactId> 
			</dependency> -->
		<!-- <dependency> <groupId>org.slf4j</groupId> <artifactId>slf4j-simple</artifactId> 
			</dependency> -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-easymock</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4-rule</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-classloading-xstream</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4-rule-agent</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- <dependency> <groupId>xalan</groupId> <artifactId>xalan</artifactId> 
			<scope>provided</scope> <exclusions> <exclusion> <artifactId>xml-apis</artifactId> 
			<groupId>xml-apis</groupId> </exclusion> </exclusions> </dependency> -->
		<dependency>
			<groupId>com.openpojo</groupId>
			<artifactId>openpojo</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.spec.javax.ejb</groupId>
			<artifactId>jboss-ejb-api_3.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>
	</dependencies>




	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<source>${java.source.version}</source>
						<target>${java.target.version}</target>
						<encoding>${java.encoding}</encoding>
						<showDeprecation>true</showDeprecation>
					</configuration>

				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${maven-clean-plugin.version}</version>
					<configuration>
						<filesets>
							<fileset>
								<directory>.</directory>
								<includes>
									<include>gen</include>
								</includes>
								<followSymlinks>false</followSymlinks>
							</fileset>
						</filesets>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>${build-helper-maven-plugin.version}</version>
					<executions>
						<execution>
							<phase>generate-sources</phase>
							<goals>
								<goal>add-source</goal>
							</goals>
							<configuration>
								<sources>
									<source>src/main/java</source>
									<source>gen/src/main/java</source>
								</sources>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>0.7.5.201505241946</version>
					<executions>
						<execution>
							<id>default-prepare-agent</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
						</execution>
						<execution>
							<id>default-report</id>
							<phase>prepare-package</phase>
							<goals>
								<goal>report</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>cobertura-maven-plugin</artifactId>
					<version>${cobertura-maven-plugin.version}</version>
					<configuration>
						<aggregate>true</aggregate>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven-source-plugin.version}</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<phase>verify</phase>
							<goals>
								<goal>jar</goal>
								<goal>test-jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven-javadoc-plugin.version}</version>
					<configuration>
						<minmemory>128m</minmemory>
						<maxmemory>512m</maxmemory>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar-plugin.version}</version>
					<!-- <executions> <execution> <goals> <goal>test-jar</goal> </goals> 
						</execution> </executions> -->
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${maven-war-plugin.version}</version>
					<!-- <configuration> <packagingExcludes>WEB-INF/lib/*.jar</packagingExcludes> 
						</configuration> -->
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-ear-plugin</artifactId>
					<version>${maven-ear-plugin.version}</version>
					<configuration>
						<!-- The work directory for the maven-ear-plugin is essentially exploded 
							version of the ear (useful for automating deployment in local development 
							scenario). For this to work, the work directory must not be in the same directory 
							as the ear file itself since they have the same name. -->
						<workDirectory>${project.build.directory}/exploded/${project.build.finalName}.ear</workDirectory>
						<modules>
							<!-- Add modules in extending child sub project as needed -->
						</modules>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
					<!-- <executions> <execution> <id>default-resources</id> <configuration> 
						<outputDirectory>${project.build.directory}/exploded/${project.build.finalName}.ear</outputDirectory> 
						</configuration> </execution> </executions> -->
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-pmd-plugin</artifactId>
					<version>${maven-pmd-plugin.version}</version>
					<configuration>
						<aggregate>true</aggregate>
						<targetJdk>${java.target.version}</targetJdk>
						<rulesets>
							<ruleset>/rulesets/basic.xml</ruleset>
							<ruleset>/rulesets/braces.xml</ruleset>
							<ruleset>/rulesets/naming.xml</ruleset>
							<ruleset>/rulesets/unusedcode.xml</ruleset>
						</rulesets>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${maven-assembly-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>${maven-antrun-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>${maven-release-plugin.version}</version>
					<configuration>
						<autoVersionSubmodules>true</autoVersionSubmodules>
						<goals>javadoc:jar deploy</goals>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<configuration>
						<!-- <argLine>-XX:-UseSplitVerifier -XX:MaxPermSize=256m</argLine> -->
					</configuration>
				</plugin>
				<!-- plugin so you can run mvn jetty:run -->
				<plugin>
					<groupId>org.mortbay.jetty</groupId>
					<artifactId>jetty-maven-plugin</artifactId>
					<version>${jetty-maven-plugin.version}</version>
					<configuration>
						<webAppConfig>
							<contextPath>/</contextPath>
						</webAppConfig>
						<systemProperties>
							<!-- enable easy JMX connection to JConsole -->
							<systemProperty>
								<name>com.sun.management.jmxremote</name>
								<value />
							</systemProperty>
						</systemProperties>
						<scanIntervalSeconds>10</scanIntervalSeconds>
					</configuration>
				</plugin>

				<!-- plugin to deploy to JBoss AS with: mvn jboss-as:deploy (you can 
					also do redeploy/undeploy) -->
				<plugin>
					<groupId>org.jboss.as.plugins</groupId>
					<artifactId>jboss-as-maven-plugin</artifactId>
					<version>${jboss-as-maven-plugin.version}</version>
				</plugin>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-install-plugin</artifactId>
										<versionRange>[2.3.1,)</versionRange>
										<goals>
											<goal>install-file</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<!-- copy-dependency plugin -->
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
											<goal>unpack-dependencies</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.cxf</groupId>
										<artifactId>cxf-codegen-plugin</artifactId>
										<versionRange>[2.2.7,)</versionRange>
										<goals>
											<goal>wsdl2java</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${maven-surefire-report-plugin.version}</version>
			</plugin>
		</plugins>
	</reporting>

	<repositories>
		<repository>
			<id>MarkLogic</id>
			<name>MarkLogic Repo</name>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
				<checksumPolicy>warn</checksumPolicy>
			</releases>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
				<checksumPolicy>fail</checksumPolicy>
			</snapshots>
			<url>http://developer.marklogic.com/maven2</url>
			<layout>default</layout>
		</repository>
		<repository>
			<id>redhat-techpreview-all-repository</id>
			<name>Red Hat Tech Preview repository (all)</name>
			<url>http://maven.repository.redhat.com/techpreview/all/</url>
			<layout>default</layout>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
				<updatePolicy>never</updatePolicy>
			</snapshots>
		</repository>
		<repository>
			<id>fusesource</id>
			<url>http://repo.fusesource.com/nexus/content/groups/public/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>
	</repositories>
	<distributionManagement>
		<repository>
			<id>nexus</id>
			<url>http://nexus:8081/content/repositories/releases</url>
		</repository>
		<snapshotRepository>
			<id>nexus</id>
			<url>http://nexus:8081/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>
</project>