<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:cxf="http://camel.apache.org/schema/cxf" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://cxf.apache.org/transports/camel http://cxf.apache.org/transports/camel.xsd
		http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf-2.15.1-spring.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring-2.15.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd">

	<context:annotation-config />

	<!-- Properties -->
	<bean id="testAwsProps"
		class="org.apache.camel.spring.spi.BridgePropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<!-- load all properties here, including common properties -->
				<!-- <value>classpath*:**/common.properties</value> -->
				<value>classpath:properties/testAws.properties</value>
			</list>
		</property>
		<property name="systemPropertiesMode">
			<util:constant
				static-field="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		</property>
	</bean>

	<bean id="addAggregation" class="org.example.test.AddAggregationStrategy" />

	<camelContext id="testAwsContext" trace="false"
		xmlns="http://camel.apache.org/schema/spring" handleFault="true"
		xmlns:tns="http://www.example.org/test/">

		<errorHandler id="defaultErrorHandler" level="DEBUG"
			type="LoggingErrorHandler" />

		<route id="cxfConsumerRoute">
			<!-- Add Exception Handling -->
			<from uri="cxf:bean:testEndpoint" />
			<log message="Received request, splitting..." />
			<!-- Split/aggregation -->
			<split parallelProcessing="true" streaming="true" strategyRef="addAggregation">
				<xtokenize mode="w">/tns:request/tns:person</xtokenize>
				<choice>
					<when>
						<xpath saxon="true" trim="true">contains(//tns:requestid/text(),'1')</xpath>
						<to uri="direct:splitA" />
					</when>
					<when>
						<xpath saxon="true" trim="true">contains(//tns:requestid/text(),'2')</xpath>
						<to uri="direct:splitB" />
					</when>
					<otherwise>
						<to uri="direct:splitC" />
					</otherwise>
				</choice>
			</split>
			<bean beanType="org.example.test.AggregateResponseWrapper"
				method="wrapAggregateResponse" />
			<log message="Aggregated response: ${body}" loggingLevel="DEBUG" />
			<to
				uri="xslt:templates/response.xslt?saxon=true&amp;transformerCacheSize=20"
				id="response" />
		</route>

		<route id="routeA">
			<from uri="direct:splitA" />

			<!-- Add Exception Handling -->

			<log message="Processing routeA" />

			<setHeader headerName="operationName">
				<simple>${type:org.apache.camel.component.cxf.common.message.CxfConstants.DISPATCH_DEFAULT_OPERATION_NAMESPACE}</simple>
			</setHeader>
			<setHeader headerName="operationNamespace">
				<simple>${type:org.apache.camel.component.cxf.common.message.CxfConstants.DISPATCH_NAMESPACE}</simple>
			</setHeader>
			<to uri="cxf:bean:aEndpoint" />

			<log message="Finished routeA" />
		</route>

		<route id="routeB">
			<from uri="direct:splitB" />

			<!-- Add Exception Handling -->
			<log message="Processing routeB" />

			<setHeader headerName="operationName">
				<simple>${type:org.apache.camel.component.cxf.common.message.CxfConstants.DISPATCH_DEFAULT_OPERATION_NAMESPACE}</simple>
			</setHeader>
			<setHeader headerName="operationNamespace">
				<simple>${type:org.apache.camel.component.cxf.common.message.CxfConstants.DISPATCH_NAMESPACE}</simple>
			</setHeader>
			<to uri="cxf:bean:bEndpoint" />
			<log message="Finished routeB" />
		</route>

		<route id="routeC">
			<from uri="direct:splitC" />

			<!-- Add Exception Handling -->

			<log message="Processing routeC" />

			<setHeader headerName="operationName">
				<simple>${type:org.apache.camel.component.cxf.common.message.CxfConstants.DISPATCH_DEFAULT_OPERATION_NAMESPACE}</simple>
			</setHeader>
			<setHeader headerName="operationNamespace">
				<simple>${type:org.apache.camel.component.cxf.common.message.CxfConstants.DISPATCH_NAMESPACE}</simple>
			</setHeader>
			<to uri="cxf:bean:cEndpoint" />
			<log message="Finished routeC" />
		</route>
	</camelContext>
</beans>
